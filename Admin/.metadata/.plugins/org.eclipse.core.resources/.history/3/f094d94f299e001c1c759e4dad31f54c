package com.abc.fundraising.controller;

import java.util.List;





import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.abc.fundraising.model.Admin;
import com.abc.fundraising.model.AdminDetails;
import com.abc.fundraising.service.AdminService;

//import io.swagger.annotations.ApiOperation;


@RestController
@RequestMapping("/admin")
public class AdminController {

	@Autowired
	private AdminService adminService;
	
	@PostMapping("/create")
	public ResponseEntity<Admin> CreateAdmin(@RequestBody Admin admin) {
		
		Admin newAdmin = adminService.saveAdmin(admin);
		return new ResponseEntity<>(newAdmin,HttpStatus.CREATED);
	}

	//@ApiOperation(value = "Get specific Post by PostId", response = AdminEntity.class, tags = "Get Post")
	  
	@GetMapping("/getAdminById/{pid}")
	public ResponseEntity<?> fetchPostDetails(@PathVariable("pid") int adminId) {
		AdminDetails admin = adminService.getAdminById(adminId);
		return new ResponseEntity<>(admin, HttpStatus.OK);
	}
	
	@GetMapping("/get/{pid}")
	public ResponseEntity<?> fetchAminDetails(@PathVariable("pid") int adminId) {
		AdminDetails admin = adminService.getAdminById(adminId);
		return new ResponseEntity<>(admin, HttpStatus.OK);
	}
	
	
	//@ApiOperation(value = "Delete Posts by adminId", tags = "Delete Admin")
	@DeleteMapping("/delete/{pid}")
	public ResponseEntity<?> deletePost(@PathVariable("pid") int adminId) {
		adminService.deleteAdmin(adminId);
		return new ResponseEntity<>("Post Deleted with id:" + adminId, HttpStatus.OK);
	}
	
	//@ApiOperation(value = "View All Admins by adminId", tags = "View All Admin")
	@GetMapping("/all")
	public List<Admin> fetchAllAdmins(){
	
	 List<Admin> admins = adminService.getAllAdmins();
	 
	 return admins;
	 
	}
	//@ApiOperation(value = "UpdateCustomer", response = Customer.class, tags = "updateCustomer")
		@PutMapping("/update")
		public ResponseEntity<Admin> modifyAdmin(@RequestBody Admin admin) {
		
			Admin updatedCustomer = adminService.updateAdmin(admin);
			return new ResponseEntity<>(updatedCustomer, HttpStatus.OK);
		}
		

	

	}